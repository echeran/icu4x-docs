initSidebarItems({"enum":[["LineBreakRule","An enum specifies the strictness of line-breaking rules. It can be passed as an argument when creating a line breaker."],["WordBreakRule","An enum specifies the line break opportunities between letters. It can be passed as an argument when creating a line breaker."]],"mod":[["provider","Data provider struct definitions for this ICU4X component."],["symbols",""]],"struct":[["DictionaryBreakIterator",""],["DictionarySegmenter",""],["GraphemeClusterBreakDataV1Marker","Marker type for [`RuleBreakDataV1`]: “segmenter/grapheme@1”"],["GraphemeClusterBreakSegmenter","Supports loading grapheme cluster break data, and creating grapheme cluster break iterators for different string encodings. Please see the module-level documentation for its usages."],["LineBreakDataV1Marker","Marker type for [`RuleBreakDataV1`]: “segmenter/line@1”"],["LineBreakIterator","Implements the `Iterator` trait over the line break opportunities of the given string. Please see the module-level documentation for its usages."],["LineBreakOptions","Options to tailor line breaking behavior, such as for CSS."],["LineBreakSegmenter","Supports loading line break data, and creating line break iterators for different string encodings. Please see the module-level documentation for its usages."],["LstmDataV1","‘LstmDataV1’ is a struct that store a LSTM model. Its attributes are: `model`: name of the model `dic`: the grapheme cluster dictionary used to train the model `mat1`: the matrix associateed with embedding layer `mat2` - `mat4`: the matrices associated with forward LSTM layer (embedding to hunits, hunits to hunits, and bias respectively) `mat5` - `mat7`: the matrices associated with backward LSTM layer (embedding to hunits, hunits to hunits, and bias respectively) `mat8` - `mat9`: the matrices associated with output layer (weight and bias term respectiely)"],["LstmDataV1Marker","Marker type for [`LstmDataV1`]: “segmenter/lstm@1”"],["LstmMatrix",""],["RuleBreakDataV1","Pre-processed Unicode data in the form of tables to be used for rule-based breaking."],["RuleBreakPropertyTable","Property table for rule-based breaking."],["RuleBreakStateTable","Break state table for rule-based breaking."],["SentenceBreakDataV1Marker","Marker type for [`RuleBreakDataV1`]: “segmenter/sentence@1”"],["SentenceBreakSegmenter","Supports loading sentence break data, and creating sentence break iterators for different string encodings. Please see the module-level documentation for its usages."],["UCharDictionaryBreakDataV1","char16trie data for dictionary break"],["UCharDictionaryBreakDataV1Marker","Marker type for [`UCharDictionaryBreakDataV1`]: “segmenter/dictionary@1”"],["WordBreakDataV1Marker","Marker type for [`RuleBreakDataV1`]: “segmenter/word@1”"],["WordBreakSegmenter","Supports loading word break data, and creating word break iterators for different string encodings. Please see the module-level documentation for its usages."]],"type":[["GraphemeClusterBreakIteratorLatin1","Grapheme cluster break iterator for a Latin-1 (8-bit) string."],["GraphemeClusterBreakIteratorUtf16","Grapheme cluster break iterator for a UTF-16 string."],["GraphemeClusterBreakIteratorUtf8","Grapheme cluster break iterator for an `str` (a UTF-8 string)."],["LineBreakIteratorLatin1","Line break iterator for a Latin-1 (8-bit) string."],["LineBreakIteratorUtf16","Line break iterator for a UTF-16 string."],["LineBreakIteratorUtf8","Line break iterator for an `str` (a UTF-8 string)."],["SentenceBreakIteratorLatin1","Sentence break iterator for a Latin-1 (8-bit) string."],["SentenceBreakIteratorUtf16","Sentence break iterator for a UTF-16 string."],["SentenceBreakIteratorUtf8","Sentence break iterator for an `str` (a UTF-8 string)."],["WordBreakIteratorLatin1","Word break iterator for a Latin-1 (8-bit) string."],["WordBreakIteratorUtf16","Word break iterator for a UTF-16 string."],["WordBreakIteratorUtf8","Word break iterator for an `str` (a UTF-8 string)."]]});
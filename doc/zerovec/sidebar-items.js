initSidebarItems({"enum":[["ZeroVec","A zero-copy vector for fixed-width types."],["ZeroVecError","A generic error type to be used for decoding slices of ULE types"]],"mod":[["map","See [`ZeroMap`] for details."],["map2d","See [`ZeroMap2d`] for details."],["ule","Traits over unaligned little-endian data (ULE, pronounced “yule”)."],["varzerovec",""]],"struct":[["VarZeroSlice","A zero-copy “slice”, that works for unsized types, i.e. the zero-copy version of `[T]` where `T` is not `Sized`."],["ZeroSlice","A zero-copy “slice”, i.e. the zero-copy version of `[T]`. This behaves similarly to [`ZeroVec<T>`], however [`ZeroVec<T>`] is allowed to contain owned data and as such is ideal for deserialization since most human readable serialization formats cannot unconditionally deserialize zero-copy."]]});
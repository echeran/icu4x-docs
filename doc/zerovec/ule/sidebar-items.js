initSidebarItems({"struct":[["CharULE","A u8 array of little-endian data corresponding to a Unicode code point."],["PlainOldULE","A u8 array of little-endian data with infallible conversions to and from &[u8]."]],"trait":[["AsULE","A trait for any type that has a 1:1 mapping with an unaligned little-endian (ULE) type."],["EqULE","An [`EqULE`] type is one whose byte sequence equals the byte sequence of its ULE type on little-endian platforms. This enables certain performance optimizations, such as `ZeroVec::try_from_slice`."],["SliceAsULE","A trait for a type where aligned slices can be cast to unaligned slices."],["ULE","Fixed-width, byte-aligned data that can be cast to and from a little-endian byte slice."],["VarULE","Variable-width, byte-aligned data that can be cast to and from a little-endian byte slice."]]});
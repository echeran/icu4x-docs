(function() {var implementors = {};
implementors["crabbake"] = [];
implementors["icu_char16trie"] = [{"text":"impl&lt;'data&gt; <a class=\"trait\" href=\"crabbake/trait.Bakeable.html\" title=\"trait crabbake::Bakeable\">Bakeable</a> for <a class=\"struct\" href=\"icu_char16trie/char16trie/struct.Char16Trie.html\" title=\"struct icu_char16trie::char16trie::Char16Trie\">Char16Trie</a>&lt;'data&gt;","synthetic":false,"types":["icu_char16trie::char16trie::Char16Trie"]}];
implementors["icu_codepointtrie"] = [{"text":"impl <a class=\"trait\" href=\"crabbake/trait.Bakeable.html\" title=\"trait crabbake::Bakeable\">Bakeable</a> for <a class=\"enum\" href=\"icu_codepointtrie/enum.TrieType.html\" title=\"enum icu_codepointtrie::TrieType\">TrieType</a>","synthetic":false,"types":["icu_codepointtrie::codepointtrie::TrieType"]},{"text":"impl <a class=\"trait\" href=\"crabbake/trait.Bakeable.html\" title=\"trait crabbake::Bakeable\">Bakeable</a> for <a class=\"struct\" href=\"icu_codepointtrie/struct.CodePointTrieHeader.html\" title=\"struct icu_codepointtrie::CodePointTrieHeader\">CodePointTrieHeader</a>","synthetic":false,"types":["icu_codepointtrie::codepointtrie::CodePointTrieHeader"]},{"text":"impl&lt;'trie, T:&nbsp;<a class=\"trait\" href=\"icu_codepointtrie/trait.TrieValue.html\" title=\"trait icu_codepointtrie::TrieValue\">TrieValue</a>&gt; <a class=\"trait\" href=\"crabbake/trait.Bakeable.html\" title=\"trait crabbake::Bakeable\">Bakeable</a> for <a class=\"struct\" href=\"icu_codepointtrie/struct.CodePointTrie.html\" title=\"struct icu_codepointtrie::CodePointTrie\">CodePointTrie</a>&lt;'trie, T&gt;","synthetic":false,"types":["icu_codepointtrie::codepointtrie::CodePointTrie"]}];
implementors["icu_list"] = [{"text":"impl <a class=\"trait\" href=\"crabbake/trait.Bakeable.html\" title=\"trait crabbake::Bakeable\">Bakeable</a> for <a class=\"struct\" href=\"icu_list/provider/struct.StringMatcher.html\" title=\"struct icu_list::provider::StringMatcher\">StringMatcher</a>&lt;'_&gt;","synthetic":false,"types":["icu_list::string_matcher::StringMatcher"]},{"text":"impl <a class=\"trait\" href=\"crabbake/trait.Bakeable.html\" title=\"trait crabbake::Bakeable\">Bakeable</a> for <a class=\"struct\" href=\"icu_list/provider/struct.AndListV1Marker.html\" title=\"struct icu_list::provider::AndListV1Marker\">AndListV1Marker</a>","synthetic":false,"types":["icu_list::provider::AndListV1Marker"]},{"text":"impl <a class=\"trait\" href=\"crabbake/trait.Bakeable.html\" title=\"trait crabbake::Bakeable\">Bakeable</a> for <a class=\"struct\" href=\"icu_list/provider/struct.OrListV1Marker.html\" title=\"struct icu_list::provider::OrListV1Marker\">OrListV1Marker</a>","synthetic":false,"types":["icu_list::provider::OrListV1Marker"]},{"text":"impl <a class=\"trait\" href=\"crabbake/trait.Bakeable.html\" title=\"trait crabbake::Bakeable\">Bakeable</a> for <a class=\"struct\" href=\"icu_list/provider/struct.UnitListV1Marker.html\" title=\"struct icu_list::provider::UnitListV1Marker\">UnitListV1Marker</a>","synthetic":false,"types":["icu_list::provider::UnitListV1Marker"]},{"text":"impl&lt;'data&gt; <a class=\"trait\" href=\"crabbake/trait.Bakeable.html\" title=\"trait crabbake::Bakeable\">Bakeable</a> for <a class=\"struct\" href=\"icu_list/provider/struct.ListFormatterPatternsV1.html\" title=\"struct icu_list::provider::ListFormatterPatternsV1\">ListFormatterPatternsV1</a>&lt;'data&gt;","synthetic":false,"types":["icu_list::provider::ListFormatterPatternsV1"]},{"text":"impl&lt;'data&gt; <a class=\"trait\" href=\"crabbake/trait.Bakeable.html\" title=\"trait crabbake::Bakeable\">Bakeable</a> for <a class=\"struct\" href=\"icu_list/provider/struct.ConditionalListJoinerPattern.html\" title=\"struct icu_list::provider::ConditionalListJoinerPattern\">ConditionalListJoinerPattern</a>&lt;'data&gt;","synthetic":false,"types":["icu_list::provider::ConditionalListJoinerPattern"]},{"text":"impl&lt;'data&gt; <a class=\"trait\" href=\"crabbake/trait.Bakeable.html\" title=\"trait crabbake::Bakeable\">Bakeable</a> for <a class=\"struct\" href=\"icu_list/provider/struct.SpecialCasePattern.html\" title=\"struct icu_list::provider::SpecialCasePattern\">SpecialCasePattern</a>&lt;'data&gt;","synthetic":false,"types":["icu_list::provider::SpecialCasePattern"]},{"text":"impl <a class=\"trait\" href=\"crabbake/trait.Bakeable.html\" title=\"trait crabbake::Bakeable\">Bakeable</a> for <a class=\"struct\" href=\"icu_list/provider/struct.ListJoinerPattern.html\" title=\"struct icu_list::provider::ListJoinerPattern\">ListJoinerPattern</a>&lt;'_&gt;","synthetic":false,"types":["icu_list::provider::ListJoinerPattern"]}];
implementors["icu_provider"] = [{"text":"impl&lt;'data&gt; <a class=\"trait\" href=\"crabbake/trait.Bakeable.html\" title=\"trait crabbake::Bakeable\">Bakeable</a> for <a class=\"struct\" href=\"icu_provider/hello_world/struct.HelloWorldV1.html\" title=\"struct icu_provider::hello_world::HelloWorldV1\">HelloWorldV1</a>&lt;'data&gt;","synthetic":false,"types":["icu_provider::hello_world::HelloWorldV1"]},{"text":"impl <a class=\"trait\" href=\"crabbake/trait.Bakeable.html\" title=\"trait crabbake::Bakeable\">Bakeable</a> for <a class=\"struct\" href=\"icu_provider/hello_world/struct.HelloWorldV1Marker.html\" title=\"struct icu_provider::hello_world::HelloWorldV1Marker\">HelloWorldV1Marker</a>","synthetic":false,"types":["icu_provider::hello_world::HelloWorldV1Marker"]}];
implementors["icu_uniset"] = [{"text":"impl <a class=\"trait\" href=\"crabbake/trait.Bakeable.html\" title=\"trait crabbake::Bakeable\">Bakeable</a> for <a class=\"struct\" href=\"icu_uniset/struct.UnicodeSet.html\" title=\"struct icu_uniset::UnicodeSet\">UnicodeSet</a>&lt;'_&gt;","synthetic":false,"types":["icu_uniset::uniset::UnicodeSet"]}];
implementors["tinystr"] = [{"text":"impl&lt;const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.61.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"crabbake/trait.Bakeable.html\" title=\"trait crabbake::Bakeable\">Bakeable</a> for <a class=\"struct\" href=\"tinystr/struct.TinyAsciiStr.html\" title=\"struct tinystr::TinyAsciiStr\">TinyAsciiStr</a>&lt;N&gt;","synthetic":false,"types":["tinystr::ascii::TinyAsciiStr"]}];
implementors["zerovec"] = [{"text":"impl&lt;'a, K, V&gt; <a class=\"trait\" href=\"crabbake/trait.Bakeable.html\" title=\"trait crabbake::Bakeable\">Bakeable</a> for <a class=\"struct\" href=\"zerovec/struct.ZeroMap.html\" title=\"struct zerovec::ZeroMap\">ZeroMap</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: <a class=\"trait\" href=\"zerovec/maps/trait.ZeroMapKV.html\" title=\"trait zerovec::maps::ZeroMapKV\">ZeroMapKV</a>&lt;'a&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: <a class=\"trait\" href=\"zerovec/maps/trait.ZeroMapKV.html\" title=\"trait zerovec::maps::ZeroMapKV\">ZeroMapKV</a>&lt;'a&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;K::<a class=\"associatedtype\" href=\"zerovec/maps/trait.ZeroMapKV.html#associatedtype.Container\" title=\"type zerovec::maps::ZeroMapKV::Container\">Container</a>: <a class=\"trait\" href=\"crabbake/trait.Bakeable.html\" title=\"trait crabbake::Bakeable\">Bakeable</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;V::<a class=\"associatedtype\" href=\"zerovec/maps/trait.ZeroMapKV.html#associatedtype.Container\" title=\"type zerovec::maps::ZeroMapKV::Container\">Container</a>: <a class=\"trait\" href=\"crabbake/trait.Bakeable.html\" title=\"trait crabbake::Bakeable\">Bakeable</a>,&nbsp;</span>","synthetic":false,"types":["zerovec::map::map::ZeroMap"]},{"text":"impl&lt;'a, K0, K1, V&gt; <a class=\"trait\" href=\"crabbake/trait.Bakeable.html\" title=\"trait crabbake::Bakeable\">Bakeable</a> for <a class=\"struct\" href=\"zerovec/struct.ZeroMap2d.html\" title=\"struct zerovec::ZeroMap2d\">ZeroMap2d</a>&lt;'a, K0, K1, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K0: <a class=\"trait\" href=\"zerovec/maps/trait.ZeroMapKV.html\" title=\"trait zerovec::maps::ZeroMapKV\">ZeroMapKV</a>&lt;'a&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;K1: <a class=\"trait\" href=\"zerovec/maps/trait.ZeroMapKV.html\" title=\"trait zerovec::maps::ZeroMapKV\">ZeroMapKV</a>&lt;'a&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: <a class=\"trait\" href=\"zerovec/maps/trait.ZeroMapKV.html\" title=\"trait zerovec::maps::ZeroMapKV\">ZeroMapKV</a>&lt;'a&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;K0::<a class=\"associatedtype\" href=\"zerovec/maps/trait.ZeroMapKV.html#associatedtype.Container\" title=\"type zerovec::maps::ZeroMapKV::Container\">Container</a>: <a class=\"trait\" href=\"crabbake/trait.Bakeable.html\" title=\"trait crabbake::Bakeable\">Bakeable</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;K1::<a class=\"associatedtype\" href=\"zerovec/maps/trait.ZeroMapKV.html#associatedtype.Container\" title=\"type zerovec::maps::ZeroMapKV::Container\">Container</a>: <a class=\"trait\" href=\"crabbake/trait.Bakeable.html\" title=\"trait crabbake::Bakeable\">Bakeable</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;V::<a class=\"associatedtype\" href=\"zerovec/maps/trait.ZeroMapKV.html#associatedtype.Container\" title=\"type zerovec::maps::ZeroMapKV::Container\">Container</a>: <a class=\"trait\" href=\"crabbake/trait.Bakeable.html\" title=\"trait crabbake::Bakeable\">Bakeable</a>,&nbsp;</span>","synthetic":false,"types":["zerovec::map2d::map::ZeroMap2d"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"zerovec/ule/trait.VarULE.html\" title=\"trait zerovec::ule::VarULE\">VarULE</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"crabbake/trait.Bakeable.html\" title=\"trait crabbake::Bakeable\">Bakeable</a> for <a class=\"enum\" href=\"zerovec/enum.VarZeroVec.html\" title=\"enum zerovec::VarZeroVec\">VarZeroVec</a>&lt;'_, T&gt;","synthetic":false,"types":["zerovec::varzerovec::vec::VarZeroVec"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"crabbake/trait.Bakeable.html\" title=\"trait crabbake::Bakeable\">Bakeable</a> for <a class=\"enum\" href=\"zerovec/enum.ZeroVec.html\" title=\"enum zerovec::ZeroVec\">ZeroVec</a>&lt;'_, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,&nbsp;</span>","synthetic":false,"types":["zerovec::zerovec::ZeroVec"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
(function() {var implementors = {};
implementors["icu_datetime"] = [{"text":"impl Serialize for DatesV1","synthetic":false,"types":[]},{"text":"impl Serialize for DateSymbolsV1","synthetic":false,"types":[]},{"text":"impl Serialize for PatternsV1","synthetic":false,"types":[]},{"text":"impl Serialize for SymbolsV1","synthetic":false,"types":[]},{"text":"impl Serialize for FormatWidthsV1","synthetic":false,"types":[]},{"text":"impl Serialize for StandAloneWidthsV1","synthetic":false,"types":[]},{"text":"impl Serialize for ContextsV1","synthetic":false,"types":[]},{"text":"impl Serialize for SymbolsV1","synthetic":false,"types":[]},{"text":"impl Serialize for FormatWidthsV1","synthetic":false,"types":[]},{"text":"impl Serialize for StandAloneWidthsV1","synthetic":false,"types":[]},{"text":"impl Serialize for ContextsV1","synthetic":false,"types":[]},{"text":"impl Serialize for SymbolsV1","synthetic":false,"types":[]},{"text":"impl Serialize for FormatWidthsV1","synthetic":false,"types":[]},{"text":"impl Serialize for StandAloneWidthsV1","synthetic":false,"types":[]},{"text":"impl Serialize for ContextsV1","synthetic":false,"types":[]},{"text":"impl Serialize for StylePatternsV1","synthetic":false,"types":[]},{"text":"impl Serialize for PatternV1","synthetic":false,"types":[]},{"text":"impl Serialize for SkeletonV1","synthetic":false,"types":[]},{"text":"impl Serialize for SkeletonsV1","synthetic":false,"types":[]},{"text":"impl Serialize for DateTimeFormatsV1","synthetic":false,"types":[]},{"text":"impl Serialize for Skeleton","synthetic":false,"types":[]}];
implementors["icu_decimal"] = [{"text":"impl Serialize for AffixesV1","synthetic":false,"types":[]},{"text":"impl Serialize for GroupingSizesV1","synthetic":false,"types":[]},{"text":"impl Serialize for DecimalSymbolsV1","synthetic":false,"types":[]}];
implementors["icu_locale_canonicalizer"] = [{"text":"impl Serialize for LikelySubtagsV1","synthetic":false,"types":[]}];
implementors["icu_locid"] = [{"text":"impl Serialize for LanguageIdentifier","synthetic":false,"types":[]}];
implementors["icu_plurals"] = [{"text":"impl&lt;'s&gt; Serialize for PluralRuleStringsV1&lt;'s&gt;","synthetic":false,"types":[]}];
implementors["icu_provider"] = [{"text":"impl&lt;'s&gt; Serialize for HelloWorldV1&lt;'s&gt;","synthetic":false,"types":[]}];
implementors["icu_provider_fs"] = [{"text":"impl Serialize for AliasOption","synthetic":false,"types":[]},{"text":"impl Serialize for LocalesOption","synthetic":false,"types":[]},{"text":"impl Serialize for SyntaxOption","synthetic":false,"types":[]},{"text":"impl Serialize for OverwriteOption","synthetic":false,"types":[]},{"text":"impl Serialize for ExporterOptions","synthetic":false,"types":[]}];
implementors["icu_segmenter_lstm"] = [{"text":"impl Serialize for LstmData","synthetic":false,"types":[]}];
implementors["icu_uniset"] = [{"text":"impl&lt;'s&gt; Serialize for UnicodeProperty&lt;'s&gt;","synthetic":false,"types":[]}];
implementors["litemap"] = [{"text":"impl&lt;K:&nbsp;Serialize, V:&nbsp;Serialize&gt; Serialize for LiteMap&lt;K, V&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
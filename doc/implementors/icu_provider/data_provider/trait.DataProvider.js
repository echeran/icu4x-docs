(function() {var implementors = {};
implementors["icu_provider_cldr"] = [{"text":"impl&lt;'d&gt; DataProvider&lt;'d, DatesV1&gt; for DatesProvider&lt;'d&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'d, 's&gt; DataProvider&lt;'d, dyn ErasedDataStruct + 's&gt; for DatesProvider&lt;'d&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'s: 'd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'d, 's&gt; DataProvider&lt;'d, dyn SerdeSeDataStruct&lt;'s&gt; + 's&gt; for DatesProvider&lt;'d&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'s: 'd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'d&gt; DataProvider&lt;'d, LikelySubtagsV1&gt; for LikelySubtagsProvider&lt;'d&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'d, 's&gt; DataProvider&lt;'d, dyn ErasedDataStruct + 's&gt; for LikelySubtagsProvider&lt;'d&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'s: 'd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'d, 's&gt; DataProvider&lt;'d, dyn SerdeSeDataStruct&lt;'s&gt; + 's&gt; for LikelySubtagsProvider&lt;'d&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'s: 'd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'d&gt; DataProvider&lt;'d, DecimalSymbolsV1&gt; for NumbersProvider","synthetic":false,"types":[]},{"text":"impl&lt;'d, 's&gt; DataProvider&lt;'d, dyn ErasedDataStruct + 's&gt; for NumbersProvider <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'s: 'd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'d, 's&gt; DataProvider&lt;'d, dyn SerdeSeDataStruct&lt;'s&gt; + 's&gt; for NumbersProvider <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'s: 'd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'d, 's&gt; DataProvider&lt;'d, PluralRuleStringsV1&lt;'s&gt;&gt; for PluralsProvider&lt;'d&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'d, 's&gt; DataProvider&lt;'d, dyn ErasedDataStruct + 's&gt; for PluralsProvider&lt;'d&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'s: 'd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'d, 's&gt; DataProvider&lt;'d, dyn SerdeSeDataStruct&lt;'s&gt; + 's&gt; for PluralsProvider&lt;'d&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'s: 'd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'd, 's: 'd&gt; DataProvider&lt;'d, dyn SerdeSeDataStruct&lt;'s&gt; + 's&gt; for CldrJsonDataProvider&lt;'a, 'd&gt;","synthetic":false,"types":[]}];
implementors["icu_provider_fs"] = [{"text":"impl&lt;'d, T&gt; DataProvider&lt;'d, T&gt; for FsDataProvider <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Deserialize&lt;'d&gt; + Serialize + Clone + Debug + 'd,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["icu_provider_ppucd"] = [{"text":"impl&lt;'d, 's&gt; DataProvider&lt;'d, UnicodeProperty&lt;'s&gt;&gt; for PpucdDataProvider&lt;'s&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
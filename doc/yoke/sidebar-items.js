initSidebarItems({"derive":[["Yokeable","Custom derive for `yoke::Yokeable`,"],["ZeroCopyFrom","Custom derive for `yoke::ZeroCopyFrom`,"]],"mod":[["either","Types to enable polymorphic carts."],["erased","This module contains helper types for erasing Cart types."],["trait_hack","Workarounds for adding trait bounds to `yoke` objects."]],"struct":[["Yoke","A Cow-like borrowed object “yoked” to its backing data."]],"trait":[["CloneableCart","This trait marks cart types that do not change source on cloning"],["IsCovariant","A type implementing `IsCovariant<'a>` is covariant with respect to lifetime `'a`."],["Yokeable","A [`Yokeable`] type is essentially one with a covariant lifetime parameter, matched to the parameter in the trait definition. The trait allows one to cast the covariant lifetime to and from `'static`."],["ZeroCopyFrom","Trait for types that can be crated from a reference to a cart type `C` with no allocations."]]});
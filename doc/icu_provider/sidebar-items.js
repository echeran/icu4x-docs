initSidebarItems({"enum":[["DataError","Error enumeration for DataProvider."]],"macro":[["impl_data_marker_no_lifetime","Temporary macro to implement data struct boilerplate for a struct with no lifetime."],["impl_dyn_provider","Implement `DataProvider` for a trait object `S` on a type that already implements `DataProvider` for one or more `M`, where `M` is a concrete type that implements the trait `S`."],["resource_key","Shortcut to construct a const resource identifier."],["unsafe_impl_data_marker_with_lifetime","Temporary macro to implement data struct boilerplate for a struct with a lifetime."]],"mod":[["dynutil","Utilities for using trait objects with `DataPayload`."],["erased","Collection of traits for providers that support type erasure of data structs."],["export","Types having to do with the exporting of data."],["hello_world","Data provider returning multilingual \"Hello World\" strings for testing."],["internal","Macro dependencies; not intended to be used directly."],["inv","Locale-invariant data provider that requires no I/O."],["iter","Collection of iteration APIs for [`DataProvider`]."],["marker","Marker types and traits for DataProvider."],["prelude","Core selection of APIs and structures for [`DataProvider`]."],["serde","Collection of traits for providers that support serializing or deserializing data."],["struct_provider","Data provider always serving the same struct."]]});
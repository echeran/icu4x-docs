initSidebarItems({"attr":[["data_struct","The `#[data_struct]` attribute should be applied to all types intended for use in a `DataStruct`. It does the following things:"]],"macro":[["impl_auto_deserializing","Implements [ResourceProvider] and [DynProvider] if [BufferProvider] is implemented. This allows dropping the call to `.as_deserializing()`."],["impl_dyn_provider","Implements `DynProvider` for a marker type `S` on a type that already implements `DynProvider` or `ResourceProvider` for one or more `M`, where `M` is a concrete type that is convertible to `S` via [`UpcastDataPayload`]."],["make_exportable_provider",""],["resource_key","See [`ResourceKey`]."]],"mod":[["any","Traits for data providers that produce `Any` objects."],["buf","Traits for data providers that produce opaque buffers."],["datagen","This module contains various utilities required to generate ICU4X data files, typically via the `icu4x-datagen` tool. End users should not need to consume anything in this module as a library unless defining new types that integrate with `icu4x-datagen`."],["dynutil","Utilities for using trait objects with `DataPayload`."],["hello_world","Data provider returning multilingual “Hello World” strings for testing."],["inv","Locale-invariant data provider that requires no I/O."],["marker","Marker types and traits for DataProvider."],["prelude","Core selection of APIs and structures for the ICU4X data provider."],["serde","Provides the [`DeserializingBufferProvider`] wrapper, which deserializes data using Serde."]],"struct":[["RcWrap","A wrapper type that wraps either an `Rc` or an `Arc`, depending on the “sync” feature. Create this from a `&[u8]`."]]});
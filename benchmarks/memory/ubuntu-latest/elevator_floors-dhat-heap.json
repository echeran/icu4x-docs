{
  "dhatFileVersion": 2,
  "mode": "rust-heap",
  "verb": "Allocated",
  "bklt": true,
  "bkacc": false,
  "tu": "Âµs",
  "Mtu": "s",
  "tuth": 10,
  "cmd": "target/release/examples/elevator_floors",
  "pid": 5434,
  "tg": 210,
  "te": 327,
  "pps": [
    {
      "tb": 84,
      "tbk": 1,
      "tl": 2,
      "mb": 84,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 55,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        13,
        14,
        15,
        16,
        11
      ]
    },
    {
      "tb": 8,
      "tbk": 1,
      "tl": 0,
      "mb": 8,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        17,
        18,
        19,
        20,
        21,
        11
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 24,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        13,
        14,
        15,
        22,
        11
      ]
    },
    {
      "tb": 80,
      "tbk": 2,
      "tl": 3,
      "mb": 64,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        23,
        24,
        25,
        22,
        11
      ]
    },
    {
      "tb": 24,
      "tbk": 2,
      "tl": 0,
      "mb": 16,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        11
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 80,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        13,
        14,
        15,
        41,
        11
      ]
    },
    {
      "tb": 480,
      "tbk": 4,
      "tl": 8,
      "mb": 256,
      "mbk": 1,
      "gb": 256,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        23,
        42,
        43,
        11
      ]
    },
    {
      "tb": 84,
      "tbk": 1,
      "tl": 3,
      "mb": 84,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        11
      ]
    },
    {
      "tb": 171,
      "tbk": 2,
      "tl": 96,
      "mb": 114,
      "mbk": 1,
      "gb": 114,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        55,
        11
      ]
    },
    {
      "tb": 156,
      "tbk": 2,
      "tl": 44,
      "mb": 104,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        56,
        57
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 41,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        13,
        58,
        15,
        16,
        11
      ]
    },
    {
      "tb": 336,
      "tbk": 3,
      "tl": 12,
      "mb": 192,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        59,
        15,
        22,
        11
      ]
    },
    {
      "tb": 336,
      "tbk": 3,
      "tl": 41,
      "mb": 192,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        59,
        15,
        16,
        11
      ]
    },
    {
      "tb": 51,
      "tbk": 1,
      "tl": 5,
      "mb": 51,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        60
      ]
    },
    {
      "tb": 57,
      "tbk": 1,
      "tl": 241,
      "mb": 57,
      "mbk": 1,
      "gb": 57,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        61
      ]
    },
    {
      "tb": 76,
      "tbk": 1,
      "tl": 3,
      "mb": 76,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        62,
        11
      ]
    },
    {
      "tb": 28,
      "tbk": 1,
      "tl": 101,
      "mb": 28,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        63,
        64,
        65,
        11
      ]
    },
    {
      "tb": 47,
      "tbk": 1,
      "tl": 9,
      "mb": 47,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        66
      ]
    },
    {
      "tb": 28,
      "tbk": 1,
      "tl": 95,
      "mb": 28,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        63,
        67,
        65,
        11
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 68,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        13,
        58,
        15,
        41,
        11
      ]
    },
    {
      "tb": 19,
      "tbk": 1,
      "tl": 4,
      "mb": 19,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 12,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        13,
        58,
        15,
        22,
        11
      ]
    },
    {
      "tb": 176,
      "tbk": 1,
      "tl": 113,
      "mb": 176,
      "mbk": 1,
      "gb": 176,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        77,
        11
      ]
    },
    {
      "tb": 80,
      "tbk": 2,
      "tl": 61,
      "mb": 64,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        23,
        24,
        25,
        41,
        11
      ]
    },
    {
      "tb": 72,
      "tbk": 1,
      "tl": 6,
      "mb": 72,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        78
      ]
    },
    {
      "tb": 141,
      "tbk": 2,
      "tl": 8,
      "mb": 94,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        56,
        79
      ]
    },
    {
      "tb": 28,
      "tbk": 1,
      "tl": 87,
      "mb": 28,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        63,
        80,
        65,
        11
      ]
    },
    {
      "tb": 336,
      "tbk": 3,
      "tl": 67,
      "mb": 192,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        59,
        15,
        41,
        11
      ]
    },
    {
      "tb": 8192,
      "tbk": 1,
      "tl": 23,
      "mb": 8192,
      "mbk": 1,
      "gb": 8192,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        81,
        11
      ]
    },
    {
      "tb": 80,
      "tbk": 2,
      "tl": 35,
      "mb": 64,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        23,
        24,
        25,
        16,
        11
      ]
    },
    {
      "tb": 171,
      "tbk": 2,
      "tl": 35,
      "mb": 114,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        56,
        82
      ]
    }
  ],
  "ftbl": [
    "[root]",
    "0x5581f1762364: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:226:9)",
    "0x5581f1762364: alloc::raw_vec::RawVec<T,A>::allocate_in (raw_vec.rs:204:45)",
    "0x5581f1762364: alloc::raw_vec::RawVec<T,A>::with_capacity_in (raw_vec.rs:143:9)",
    "0x5581f1762364: alloc::vec::Vec<T,A>::with_capacity_in (mod.rs:604:20)",
    "0x5581f1762364: alloc::vec::Vec<T>::with_capacity (mod.rs:465:9)",
    "0x5581f1762364: <&[u8] as std::ffi::c_str::CString::new::SpecIntoVec>::into_vec (c_str.rs:387:29)",
    "0x5581f1762364: std::ffi::c_str::CString::new (c_str.rs:400:20)",
    "0x5581f1762364: std::sys::unix::fs::cstr (fs.rs:927:8)",
    "0x5581f1762364: std::sys::unix::fs::stat (fs.rs:1177:13)",
    "0x5581f1725376: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x5581f17290f0: main (???:0:0)",
    "0x5581f172174b: <dhat::DhatAlloc as core::alloc::global::GlobalAlloc>::alloc (???:0:0)",
    "0x5581f172d577: icu_plurals::rules::parser::Parser::get_relation (???:0:0)",
    "0x5581f172d05f: icu_plurals::rules::parser::Parser::get_and_condition (???:0:0)",
    "0x5581f172e507: icu_plurals::data::parse_rule (???:0:0)",
    "0x5581f172670f: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x5581f172e7d5: alloc::raw_vec::finish_grow (???:0:0)",
    "0x5581f16f398c: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (???:0:0)",
    "0x5581f172f168: <alloc::string::String as core::fmt::Write>::write_str.2885 (???:0:0)",
    "0x5581f172eef9: <icu_provider::resource::ResourceOptionsComponents as core::convert::From<&icu_provider::resource::ResourceOptions>>::from (???:0:0)",
    "0x5581f172513b: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x5581f1726b0c: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x5581f172ceb2: alloc::raw_vec::finish_grow (???:0:0)",
    "0x5581f16f3cb3: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (???:0:0)",
    "0x5581f172e60c: icu_plurals::data::parse_rule (???:0:0)",
    "0x5581f16f9393: alloc::raw_vec::finish_grow (???:0:0)",
    "0x5581f16f3a17: alloc::raw_vec::RawVec<T,A>::grow_amortized (raw_vec.rs:443:19)",
    "0x5581f16f3a17: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (raw_vec.rs:334:28)",
    "0x5581f16f971a: alloc::raw_vec::RawVec<T,A>::reserve (raw_vec.rs:338:13)",
    "0x5581f16f971a: alloc::vec::Vec<T,A>::reserve (mod.rs:804:9)",
    "0x5581f16f971a: alloc::vec::Vec<T,A>::append_elements (mod.rs:1735:9)",
    "0x5581f16f971a: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (spec_extend.rs:85:18)",
    "0x5581f16f971a: alloc::vec::Vec<T,A>::extend_from_slice (mod.rs:2162:9)",
    "0x5581f16f971a: alloc::string::String::push_str (string.rs:841:9)",
    "0x5581f16f971a: <alloc::string::String as core::fmt::Write>::write_str (string.rs:2711:9)",
    "0x5581f16f971a: <&mut W as core::fmt::Write>::write_str (mod.rs:193:9)",
    "0x5581f17132dc: core::fmt::write (mod.rs:1126:17)",
    "0x5581f16f9667: core::fmt::Write::write_fmt (mod.rs:186:9)",
    "0x5581f16f9667: alloc::fmt::format (fmt.rs:583:5)",
    "0x5581f1724cd3: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x5581f17262e4: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x5581f16f6c2d: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (???:0:0)",
    "0x5581f1725733: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x5581f1763a34: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:226:9)",
    "0x5581f1763a34: alloc::raw_vec::RawVec<T,A>::allocate_in (raw_vec.rs:204:45)",
    "0x5581f1763a34: alloc::raw_vec::RawVec<T,A>::with_capacity_in (raw_vec.rs:143:9)",
    "0x5581f1763a34: alloc::vec::Vec<T,A>::with_capacity_in (mod.rs:604:20)",
    "0x5581f1763a34: alloc::vec::Vec<T>::with_capacity (mod.rs:465:9)",
    "0x5581f1763a34: <&[u8] as std::ffi::c_str::CString::new::SpecIntoVec>::into_vec (c_str.rs:387:29)",
    "0x5581f1763a34: std::ffi::c_str::CString::new (c_str.rs:400:20)",
    "0x5581f1763a34: std::sys::unix::fs::cstr (fs.rs:927:8)",
    "0x5581f1763a34: std::sys::unix::fs::File::open (fs.rs:755:20)",
    "0x5581f1763a34: std::fs::OpenOptions::_open (fs.rs:933:9)",
    "0x5581f17254fd: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x5581f1724bb9: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x5581f17305ec: std::path::Path::join (???:0:0)",
    "0x5581f172814c: main (???:0:0)",
    "0x5581f172d17f: icu_plurals::rules::parser::Parser::get_and_condition (???:0:0)",
    "0x5581f172d0b6: icu_plurals::rules::parser::Parser::get_and_condition (???:0:0)",
    "0x5581f1728340: main (???:0:0)",
    "0x5581f1728183: main (???:0:0)",
    "0x5581f1724f42: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x5581f1724a17: serde::de::impls::<impl serde::de::Deserialize for core::option::Option<T>>::deserialize (???:0:0)",
    "0x5581f172ba11: core::ops::function::FnOnce::call_once (???:0:0)",
    "0x5581f1725c46: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x5581f17280b3: main (???:0:0)",
    "0x5581f172bac1: core::ops::function::FnOnce::call_once (???:0:0)",
    "0x5581f17478a2: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:226:9)",
    "0x5581f17478a2: alloc::raw_vec::RawVec<T,A>::allocate_in (raw_vec.rs:204:45)",
    "0x5581f17478a2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (raw_vec.rs:143:9)",
    "0x5581f17478a2: alloc::vec::Vec<T,A>::with_capacity_in (mod.rs:604:20)",
    "0x5581f17478a2: alloc::vec::Vec<T>::with_capacity (mod.rs:465:9)",
    "0x5581f17478a2: <&[u8] as std::ffi::c_str::CString::new::SpecIntoVec>::into_vec (c_str.rs:387:29)",
    "0x5581f17478a2: std::ffi::c_str::CString::new (c_str.rs:400:20)",
    "0x5581f17478a2: std::sys::unix::os::getenv (os.rs:530:13)",
    "0x5581f172807d: main (???:0:0)",
    "0x5581f1725931: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x5581f172821e: main (???:0:0)",
    "0x5581f1728112: main (???:0:0)",
    "0x5581f172bb51: core::ops::function::FnOnce::call_once (???:0:0)",
    "0x5581f1725683: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x5581f17281e4: main (???:0:0)"
  ]
}
{
  "dhatFileVersion": 2,
  "mode": "rust-heap",
  "verb": "Allocated",
  "bklt": true,
  "bkacc": false,
  "tu": "Âµs",
  "Mtu": "s",
  "tuth": 10,
  "cmd": "target/release/examples/elevator_floors",
  "pid": 5639,
  "tg": 218,
  "te": 384,
  "pps": [
    {
      "tb": 72,
      "tbk": 1,
      "tl": 7,
      "mb": 72,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 132,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        13,
        14,
        15,
        16,
        17
      ]
    },
    {
      "tb": 336,
      "tbk": 3,
      "tl": 120,
      "mb": 192,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        18,
        15,
        16,
        17
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 12,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        13,
        19,
        15,
        20,
        17
      ]
    },
    {
      "tb": 8192,
      "tbk": 1,
      "tl": 41,
      "mb": 8192,
      "mbk": 1,
      "gb": 8192,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        21,
        17
      ]
    },
    {
      "tb": 336,
      "tbk": 3,
      "tl": 58,
      "mb": 192,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        18,
        15,
        22,
        17
      ]
    },
    {
      "tb": 28,
      "tbk": 1,
      "tl": 147,
      "mb": 28,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        23,
        24,
        25,
        17
      ]
    },
    {
      "tb": 480,
      "tbk": 4,
      "tl": 26,
      "mb": 256,
      "mbk": 1,
      "gb": 256,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        26,
        27,
        28,
        17
      ]
    },
    {
      "tb": 80,
      "tbk": 2,
      "tl": 3,
      "mb": 64,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        26,
        29,
        30,
        20,
        17
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 121,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        13,
        19,
        15,
        16,
        17
      ]
    },
    {
      "tb": 171,
      "tbk": 2,
      "tl": 40,
      "mb": 114,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        31,
        32
      ]
    },
    {
      "tb": 28,
      "tbk": 1,
      "tl": 139,
      "mb": 28,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        23,
        33,
        25,
        17
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 40,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        13,
        14,
        15,
        20,
        17
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 58,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        13,
        19,
        15,
        22,
        17
      ]
    },
    {
      "tb": 24,
      "tbk": 2,
      "tl": 0,
      "mb": 16,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        17
      ]
    },
    {
      "tb": 28,
      "tbk": 1,
      "tl": 152,
      "mb": 28,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        23,
        49,
        25,
        17
      ]
    },
    {
      "tb": 8,
      "tbk": 1,
      "tl": 0,
      "mb": 8,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        50,
        51,
        52,
        53,
        54,
        17
      ]
    },
    {
      "tb": 176,
      "tbk": 1,
      "tl": 162,
      "mb": 176,
      "mbk": 1,
      "gb": 176,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        55,
        17
      ]
    },
    {
      "tb": 76,
      "tbk": 1,
      "tl": 3,
      "mb": 76,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        17
      ]
    },
    {
      "tb": 47,
      "tbk": 1,
      "tl": 5,
      "mb": 47,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        66
      ]
    },
    {
      "tb": 156,
      "tbk": 2,
      "tl": 48,
      "mb": 104,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        31,
        67
      ]
    },
    {
      "tb": 84,
      "tbk": 1,
      "tl": 3,
      "mb": 84,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        68,
        17
      ]
    },
    {
      "tb": 80,
      "tbk": 2,
      "tl": 96,
      "mb": 64,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        26,
        29,
        30,
        16,
        17
      ]
    },
    {
      "tb": 51,
      "tbk": 1,
      "tl": 6,
      "mb": 51,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        69
      ]
    },
    {
      "tb": 80,
      "tbk": 2,
      "tl": 52,
      "mb": 64,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        26,
        29,
        30,
        22,
        17
      ]
    },
    {
      "tb": 141,
      "tbk": 2,
      "tl": 7,
      "mb": 94,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        31,
        70
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 72,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        13,
        14,
        15,
        22,
        17
      ]
    },
    {
      "tb": 336,
      "tbk": 3,
      "tl": 11,
      "mb": 192,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        18,
        15,
        20,
        17
      ]
    },
    {
      "tb": 19,
      "tbk": 1,
      "tl": 1,
      "mb": 19,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79
      ]
    },
    {
      "tb": 57,
      "tbk": 1,
      "tl": 305,
      "mb": 57,
      "mbk": 1,
      "gb": 57,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        80
      ]
    },
    {
      "tb": 171,
      "tbk": 2,
      "tl": 105,
      "mb": 114,
      "mbk": 1,
      "gb": 114,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        12,
        81,
        17
      ]
    },
    {
      "tb": 84,
      "tbk": 1,
      "tl": 2,
      "mb": 84,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        82,
        17
      ]
    }
  ],
  "ftbl": [
    "[root]",
    "0x558d2592cbd4: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:226:9)",
    "0x558d2592cbd4: alloc::raw_vec::RawVec<T,A>::allocate_in (raw_vec.rs:204:45)",
    "0x558d2592cbd4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (raw_vec.rs:143:9)",
    "0x558d2592cbd4: alloc::vec::Vec<T,A>::with_capacity_in (mod.rs:604:20)",
    "0x558d2592cbd4: alloc::vec::Vec<T>::with_capacity (mod.rs:465:9)",
    "0x558d2592cbd4: <&[u8] as std::ffi::c_str::CString::new::SpecIntoVec>::into_vec (c_str.rs:387:29)",
    "0x558d2592cbd4: std::ffi::c_str::CString::new (c_str.rs:400:20)",
    "0x558d2592cbd4: std::sys::unix::fs::cstr (fs.rs:927:8)",
    "0x558d2592cbd4: std::sys::unix::fs::File::open (fs.rs:755:20)",
    "0x558d2592cbd4: std::fs::OpenOptions::_open (fs.rs:933:9)",
    "0x558d258f118e: main (???:0:0)",
    "0x558d258ea6bb: <dhat::DhatAlloc as core::alloc::global::GlobalAlloc>::alloc (???:0:0)",
    "0x558d258f64e7: icu_plurals::rules::parser::Parser::get_relation (???:0:0)",
    "0x558d258f5fcf: icu_plurals::rules::parser::Parser::get_and_condition (???:0:0)",
    "0x558d258f7477: icu_plurals::data::parse_rule (???:0:0)",
    "0x558d258ef254: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x558d258f2060: main (???:0:0)",
    "0x558d258f6026: icu_plurals::rules::parser::Parser::get_and_condition (???:0:0)",
    "0x558d258f60ef: icu_plurals::rules::parser::Parser::get_and_condition (???:0:0)",
    "0x558d258efa7c: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x558d258ee5f3: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x558d258ef67f: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x558d258ed987: serde::de::impls::<impl serde::de::Deserialize for core::option::Option<T>>::deserialize (???:0:0)",
    "0x558d258f4a31: core::ops::function::FnOnce::call_once (???:0:0)",
    "0x558d258eebb6: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x558d258f5e22: alloc::raw_vec::finish_grow (???:0:0)",
    "0x558d258bfc2d: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (???:0:0)",
    "0x558d258ee6a3: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x558d258bccb3: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (???:0:0)",
    "0x558d258f757c: icu_plurals::data::parse_rule (???:0:0)",
    "0x558d258f955c: std::path::Path::join (???:0:0)",
    "0x558d258f1154: main (???:0:0)",
    "0x558d258f4ac1: core::ops::function::FnOnce::call_once (???:0:0)",
    "0x558d258c2303: alloc::raw_vec::finish_grow (???:0:0)",
    "0x558d258bca17: alloc::raw_vec::RawVec<T,A>::grow_amortized (raw_vec.rs:443:19)",
    "0x558d258bca17: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (raw_vec.rs:334:28)",
    "0x558d258c268a: alloc::raw_vec::RawVec<T,A>::reserve (raw_vec.rs:338:13)",
    "0x558d258c268a: alloc::vec::Vec<T,A>::reserve (mod.rs:804:9)",
    "0x558d258c268a: alloc::vec::Vec<T,A>::append_elements (mod.rs:1735:9)",
    "0x558d258c268a: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (spec_extend.rs:85:18)",
    "0x558d258c268a: alloc::vec::Vec<T,A>::extend_from_slice (mod.rs:2162:9)",
    "0x558d258c268a: alloc::string::String::push_str (string.rs:841:9)",
    "0x558d258c268a: <alloc::string::String as core::fmt::Write>::write_str (string.rs:2711:9)",
    "0x558d258c268a: <&mut W as core::fmt::Write>::write_str (mod.rs:193:9)",
    "0x558d258dc24c: core::fmt::write (mod.rs:1126:17)",
    "0x558d258c25d7: core::fmt::Write::write_fmt (mod.rs:186:9)",
    "0x558d258c25d7: alloc::fmt::format (fmt.rs:583:5)",
    "0x558d258edc43: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x558d258f4981: core::ops::function::FnOnce::call_once (???:0:0)",
    "0x558d258f7745: alloc::raw_vec::finish_grow (???:0:0)",
    "0x558d258bc98c: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (???:0:0)",
    "0x558d258f80d8: <alloc::string::String as core::fmt::Write>::write_str.2816 (???:0:0)",
    "0x558d258f7e69: <icu_provider::resource::ResourceOptionsComponents as core::convert::From<&icu_provider::resource::ResourceOptions>>::from (???:0:0)",
    "0x558d258ee0ab: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x558d258ee8a1: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x558d2592b504: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:226:9)",
    "0x558d2592b504: alloc::raw_vec::RawVec<T,A>::allocate_in (raw_vec.rs:204:45)",
    "0x558d2592b504: alloc::raw_vec::RawVec<T,A>::with_capacity_in (raw_vec.rs:143:9)",
    "0x558d2592b504: alloc::vec::Vec<T,A>::with_capacity_in (mod.rs:604:20)",
    "0x558d2592b504: alloc::vec::Vec<T>::with_capacity (mod.rs:465:9)",
    "0x558d2592b504: <&[u8] as std::ffi::c_str::CString::new::SpecIntoVec>::into_vec (c_str.rs:387:29)",
    "0x558d2592b504: std::ffi::c_str::CString::new (c_str.rs:400:20)",
    "0x558d2592b504: std::sys::unix::fs::cstr (fs.rs:927:8)",
    "0x558d2592b504: std::sys::unix::fs::stat (fs.rs:1177:13)",
    "0x558d258edeb2: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x558d258f1023: main (???:0:0)",
    "0x558d258f10bc: main (???:0:0)",
    "0x558d258ee46d: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x558d258f12b0: main (???:0:0)",
    "0x558d258f1082: main (???:0:0)",
    "0x558d25910a42: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:226:9)",
    "0x558d25910a42: alloc::raw_vec::RawVec<T,A>::allocate_in (raw_vec.rs:204:45)",
    "0x558d25910a42: alloc::raw_vec::RawVec<T,A>::with_capacity_in (raw_vec.rs:143:9)",
    "0x558d25910a42: alloc::vec::Vec<T,A>::with_capacity_in (mod.rs:604:20)",
    "0x558d25910a42: alloc::vec::Vec<T>::with_capacity (mod.rs:465:9)",
    "0x558d25910a42: <&[u8] as std::ffi::c_str::CString::new::SpecIntoVec>::into_vec (c_str.rs:387:29)",
    "0x558d25910a42: std::ffi::c_str::CString::new (c_str.rs:400:20)",
    "0x558d25910a42: std::sys::unix::os::getenv (os.rs:530:13)",
    "0x558d258f0fed: main (???:0:0)",
    "0x558d258f10f3: main (???:0:0)",
    "0x558d258edb29: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x558d258ee2e6: icu_plurals::PluralRules::try_new (???:0:0)"
  ]
}
{
  "dhatFileVersion": 2,
  "mode": "rust-heap",
  "verb": "Allocated",
  "bklt": true,
  "bkacc": false,
  "tu": "Âµs",
  "Mtu": "s",
  "tuth": 10,
  "cmd": "target/release/examples/elevator_floors",
  "pid": 6102,
  "tg": 213,
  "te": 336,
  "pps": [
    {
      "tb": 47,
      "tbk": 1,
      "tl": 5,
      "mb": 47,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2
      ]
    },
    {
      "tb": 24,
      "tbk": 2,
      "tl": 0,
      "mb": 16,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17
      ]
    },
    {
      "tb": 76,
      "tbk": 1,
      "tl": 3,
      "mb": 76,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        17
      ]
    },
    {
      "tb": 8,
      "tbk": 1,
      "tl": 0,
      "mb": 8,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        28,
        29,
        30,
        31,
        32,
        17
      ]
    },
    {
      "tb": 336,
      "tbk": 3,
      "tl": 76,
      "mb": 192,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        33,
        34,
        35,
        17
      ]
    },
    {
      "tb": 72,
      "tbk": 1,
      "tl": 9,
      "mb": 72,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46
      ]
    },
    {
      "tb": 80,
      "tbk": 2,
      "tl": 57,
      "mb": 64,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        47,
        48,
        49,
        35,
        17
      ]
    },
    {
      "tb": 84,
      "tbk": 1,
      "tl": 2,
      "mb": 84,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        50,
        17
      ]
    },
    {
      "tb": 336,
      "tbk": 3,
      "tl": 38,
      "mb": 192,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        33,
        34,
        51,
        17
      ]
    },
    {
      "tb": 336,
      "tbk": 3,
      "tl": 11,
      "mb": 192,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        33,
        34,
        52,
        17
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 77,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        53,
        54,
        34,
        35,
        17
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 11,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        53,
        54,
        34,
        52,
        17
      ]
    },
    {
      "tb": 141,
      "tbk": 2,
      "tl": 8,
      "mb": 94,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        55,
        56
      ]
    },
    {
      "tb": 28,
      "tbk": 1,
      "tl": 109,
      "mb": 28,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        57,
        58,
        59,
        17
      ]
    },
    {
      "tb": 57,
      "tbk": 1,
      "tl": 253,
      "mb": 57,
      "mbk": 1,
      "gb": 57,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        60
      ]
    },
    {
      "tb": 84,
      "tbk": 1,
      "tl": 3,
      "mb": 84,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        61,
        17
      ]
    },
    {
      "tb": 28,
      "tbk": 1,
      "tl": 103,
      "mb": 28,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        57,
        62,
        59,
        17
      ]
    },
    {
      "tb": 480,
      "tbk": 4,
      "tl": 8,
      "mb": 256,
      "mbk": 1,
      "gb": 256,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        47,
        63,
        64,
        17
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 89,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        53,
        65,
        34,
        35,
        17
      ]
    },
    {
      "tb": 8192,
      "tbk": 1,
      "tl": 25,
      "mb": 8192,
      "mbk": 1,
      "gb": 8192,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        66,
        17
      ]
    },
    {
      "tb": 176,
      "tbk": 1,
      "tl": 119,
      "mb": 176,
      "mbk": 1,
      "gb": 176,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        67,
        17
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 38,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        53,
        54,
        34,
        51,
        17
      ]
    },
    {
      "tb": 156,
      "tbk": 2,
      "tl": 48,
      "mb": 104,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        55,
        68
      ]
    },
    {
      "tb": 19,
      "tbk": 1,
      "tl": 2,
      "mb": 19,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77
      ]
    },
    {
      "tb": 28,
      "tbk": 1,
      "tl": 96,
      "mb": 28,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        57,
        78,
        59,
        17
      ]
    },
    {
      "tb": 80,
      "tbk": 2,
      "tl": 3,
      "mb": 64,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        47,
        48,
        49,
        52,
        17
      ]
    },
    {
      "tb": 171,
      "tbk": 2,
      "tl": 40,
      "mb": 114,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        55,
        79
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 51,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        53,
        65,
        34,
        51,
        17
      ]
    },
    {
      "tb": 171,
      "tbk": 2,
      "tl": 96,
      "mb": 114,
      "mbk": 1,
      "gb": 114,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        80,
        17
      ]
    },
    {
      "tb": 51,
      "tbk": 1,
      "tl": 6,
      "mb": 51,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        81
      ]
    },
    {
      "tb": 80,
      "tbk": 2,
      "tl": 33,
      "mb": 64,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        47,
        48,
        49,
        51,
        17
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 22,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        53,
        65,
        34,
        52,
        17
      ]
    }
  ],
  "ftbl": [
    "[root]",
    "0x555ec0b159c3: <dhat::DhatAlloc as core::alloc::global::GlobalAlloc>::alloc (???:0:0)",
    "0x555ec0b1c13b: main (???:0:0)",
    "0x555ec0aed553: alloc::raw_vec::finish_grow (raw_vec.rs:0:0)",
    "0x555ec0ae7957: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (???:0:0)",
    "0x555ec0aed7ba: alloc::raw_vec::RawVec<T,A>::reserve (raw_vec.rs:338:13)",
    "0x555ec0aed7ba: alloc::vec::Vec<T,A>::reserve (mod.rs:804:9)",
    "0x555ec0aed7ba: alloc::vec::Vec<T,A>::append_elements (mod.rs:1735:9)",
    "0x555ec0aed7ba: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (spec_extend.rs:85:18)",
    "0x555ec0aed7ba: alloc::vec::Vec<T,A>::extend_from_slice (mod.rs:2162:9)",
    "0x555ec0aed7ba: alloc::string::String::push_str (string.rs:841:9)",
    "0x555ec0aed7ba: <alloc::string::String as core::fmt::Write>::write_str (string.rs:2711:9)",
    "0x555ec0aed7ba: <&mut W as core::fmt::Write>::write_str (mod.rs:194:9)",
    "0x555ec0b0740c: core::fmt::write (mod.rs:1117:17)",
    "0x555ec0aed6f7: core::fmt::Write::write_fmt (mod.rs:187:9)",
    "0x555ec0aed6f7: alloc::fmt::format (fmt.rs:583:5)",
    "0x555ec0b18d4a: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x555ec0b1d0ea: main (???:0:0)",
    "0x555ec0b54714: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:226:9)",
    "0x555ec0b54714: alloc::raw_vec::RawVec<T,A>::allocate_in (raw_vec.rs:204:45)",
    "0x555ec0b54714: alloc::raw_vec::RawVec<T,A>::with_capacity_in (raw_vec.rs:143:9)",
    "0x555ec0b54714: alloc::vec::Vec<T,A>::with_capacity_in (mod.rs:604:20)",
    "0x555ec0b54714: alloc::vec::Vec<T>::with_capacity (mod.rs:465:9)",
    "0x555ec0b54714: <&[u8] as std::ffi::c_str::CString::new::SpecIntoVec>::into_vec (c_str.rs:387:29)",
    "0x555ec0b54714: std::ffi::c_str::CString::new (c_str.rs:400:20)",
    "0x555ec0b54714: std::sys::unix::fs::cstr (fs.rs:933:8)",
    "0x555ec0b54714: std::sys::unix::fs::stat (fs.rs:1141:13)",
    "0x555ec0b18fba: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x555ec0aed4a5: alloc::raw_vec::finish_grow (???:0:0)",
    "0x555ec0ae79dc: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (???:0:0)",
    "0x555ec0b23518: <alloc::string::String as core::fmt::Write>::write_str.2760 (???:0:0)",
    "0x555ec0b23295: <icu_provider::resource::ResourceOptionsComponents as core::convert::From<&icu_provider::resource::ResourceOptions>>::from (???:0:0)",
    "0x555ec0b190dd: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x555ec0b214f6: icu_plurals::rules::parser::Parser::get_and_condition (???:0:0)",
    "0x555ec0b22902: icu_plurals::data::parse_rule (???:0:0)",
    "0x555ec0b1a406: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x555ec0b55c04: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:226:9)",
    "0x555ec0b55c04: alloc::raw_vec::RawVec<T,A>::allocate_in (raw_vec.rs:204:45)",
    "0x555ec0b55c04: alloc::raw_vec::RawVec<T,A>::with_capacity_in (raw_vec.rs:143:9)",
    "0x555ec0b55c04: alloc::vec::Vec<T,A>::with_capacity_in (mod.rs:604:20)",
    "0x555ec0b55c04: alloc::vec::Vec<T>::with_capacity (mod.rs:465:9)",
    "0x555ec0b55c04: <&[u8] as std::ffi::c_str::CString::new::SpecIntoVec>::into_vec (c_str.rs:387:29)",
    "0x555ec0b55c04: std::ffi::c_str::CString::new (c_str.rs:400:20)",
    "0x555ec0b55c04: std::sys::unix::fs::cstr (fs.rs:933:8)",
    "0x555ec0b55c04: std::sys::unix::fs::File::open (fs.rs:753:20)",
    "0x555ec0b55c04: std::fs::OpenOptions::_open (fs.rs:927:9)",
    "0x555ec0b1c2af: main (???:0:0)",
    "0x555ec0b212ee: alloc::raw_vec::finish_grow (???:0:0)",
    "0x555ec0ae8153: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (???:0:0)",
    "0x555ec0b22a00: icu_plurals::data::parse_rule (???:0:0)",
    "0x555ec0b19351: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x555ec0b1a6b4: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x555ec0b1aba5: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x555ec0b219cd: icu_plurals::rules::parser::Parser::get_relation (???:0:0)",
    "0x555ec0b215bf: icu_plurals::rules::parser::Parser::get_and_condition (???:0:0)",
    "0x555ec0b24adc: std::path::Path::join (???:0:0)",
    "0x555ec0b1c1a0: main (???:0:0)",
    "0x555ec0b21017: serde::de::impls::<impl serde::de::Deserialize for core::option::Option<T>>::deserialize (???:0:0)",
    "0x555ec0b1f61f: core::ops::function::FnOnce::call_once (???:0:0)",
    "0x555ec0b19d78: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x555ec0b1c211: main (???:0:0)",
    "0x555ec0b19544: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x555ec0b1f4df: core::ops::function::FnOnce::call_once (???:0:0)",
    "0x555ec0aeac3d: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (???:0:0)",
    "0x555ec0b19793: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x555ec0b2149f: icu_plurals::rules::parser::Parser::get_and_condition (???:0:0)",
    "0x555ec0b196c6: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x555ec0b19aaf: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x555ec0b1c1da: main (???:0:0)",
    "0x555ec0b39182: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:226:9)",
    "0x555ec0b39182: alloc::raw_vec::RawVec<T,A>::allocate_in (raw_vec.rs:204:45)",
    "0x555ec0b39182: alloc::raw_vec::RawVec<T,A>::with_capacity_in (raw_vec.rs:143:9)",
    "0x555ec0b39182: alloc::vec::Vec<T,A>::with_capacity_in (mod.rs:604:20)",
    "0x555ec0b39182: alloc::vec::Vec<T>::with_capacity (mod.rs:465:9)",
    "0x555ec0b39182: <&[u8] as std::ffi::c_str::CString::new::SpecIntoVec>::into_vec (c_str.rs:387:29)",
    "0x555ec0b39182: std::ffi::c_str::CString::new (c_str.rs:400:20)",
    "0x555ec0b39182: std::sys::unix::os::getenv (os.rs:530:13)",
    "0x555ec0b1c105: main (???:0:0)",
    "0x555ec0b1f56f: core::ops::function::FnOnce::call_once (???:0:0)",
    "0x555ec0b1c272: main (???:0:0)",
    "0x555ec0b18c37: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x555ec0b1c3e3: main (???:0:0)"
  ]
}
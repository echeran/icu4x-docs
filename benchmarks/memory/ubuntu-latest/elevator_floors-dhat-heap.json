{
  "dhatFileVersion": 2,
  "mode": "rust-heap",
  "verb": "Allocated",
  "bklt": true,
  "bkacc": false,
  "tu": "Âµs",
  "Mtu": "s",
  "tuth": 10,
  "cmd": "target/release/examples/elevator_floors",
  "pid": 5438,
  "tg": 250,
  "te": 393,
  "pps": [
    {
      "tb": 19,
      "tbk": 1,
      "tl": 2,
      "mb": 19,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 108,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        10,
        11,
        12,
        13,
        14,
        15
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 54,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        10,
        11,
        16,
        13,
        17,
        15
      ]
    },
    {
      "tb": 72,
      "tbk": 1,
      "tl": 26,
      "mb": 72,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28
      ]
    },
    {
      "tb": 480,
      "tbk": 4,
      "tl": 26,
      "mb": 256,
      "mbk": 1,
      "gb": 256,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        10,
        29,
        30,
        31,
        15
      ]
    },
    {
      "tb": 336,
      "tbk": 3,
      "tl": 10,
      "mb": 192,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        10,
        32,
        13,
        33,
        15
      ]
    },
    {
      "tb": 76,
      "tbk": 1,
      "tl": 3,
      "mb": 76,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        15
      ]
    },
    {
      "tb": 336,
      "tbk": 3,
      "tl": 54,
      "mb": 192,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        10,
        32,
        13,
        17,
        15
      ]
    },
    {
      "tb": 51,
      "tbk": 1,
      "tl": 6,
      "mb": 51,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        10,
        44
      ]
    },
    {
      "tb": 28,
      "tbk": 1,
      "tl": 126,
      "mb": 28,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        10,
        45,
        46,
        47,
        15
      ]
    },
    {
      "tb": 156,
      "tbk": 2,
      "tl": 67,
      "mb": 104,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        10,
        48,
        49
      ]
    },
    {
      "tb": 80,
      "tbk": 2,
      "tl": 91,
      "mb": 64,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        10,
        29,
        50,
        51,
        14,
        15
      ]
    },
    {
      "tb": 8192,
      "tbk": 1,
      "tl": 41,
      "mb": 8192,
      "mbk": 1,
      "gb": 8192,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        10,
        52,
        15
      ]
    },
    {
      "tb": 28,
      "tbk": 1,
      "tl": 114,
      "mb": 28,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        10,
        45,
        53,
        47,
        15
      ]
    },
    {
      "tb": 171,
      "tbk": 2,
      "tl": 108,
      "mb": 114,
      "mbk": 1,
      "gb": 114,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        10,
        54,
        15
      ]
    },
    {
      "tb": 47,
      "tbk": 1,
      "tl": 6,
      "mb": 47,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        10,
        55
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 10,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        10,
        11,
        16,
        13,
        33,
        15
      ]
    },
    {
      "tb": 80,
      "tbk": 2,
      "tl": 3,
      "mb": 64,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        10,
        29,
        50,
        51,
        33,
        15
      ]
    },
    {
      "tb": 84,
      "tbk": 1,
      "tl": 2,
      "mb": 84,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        56,
        15
      ]
    },
    {
      "tb": 84,
      "tbk": 1,
      "tl": 3,
      "mb": 84,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        57,
        15
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 98,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        10,
        11,
        16,
        13,
        14,
        15
      ]
    },
    {
      "tb": 8,
      "tbk": 1,
      "tl": 0,
      "mb": 8,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        10,
        58,
        59,
        60,
        61,
        62,
        15
      ]
    },
    {
      "tb": 57,
      "tbk": 1,
      "tl": 300,
      "mb": 57,
      "mbk": 1,
      "gb": 57,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        10,
        63
      ]
    },
    {
      "tb": 28,
      "tbk": 1,
      "tl": 121,
      "mb": 28,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        10,
        45,
        64,
        47,
        15
      ]
    },
    {
      "tb": 336,
      "tbk": 3,
      "tl": 97,
      "mb": 192,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        10,
        32,
        13,
        14,
        15
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 86,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        10,
        11,
        12,
        13,
        17,
        15
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 21,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        10,
        11,
        12,
        13,
        33,
        15
      ]
    },
    {
      "tb": 141,
      "tbk": 2,
      "tl": 8,
      "mb": 94,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        10,
        48,
        65
      ]
    },
    {
      "tb": 24,
      "tbk": 2,
      "tl": 0,
      "mb": 16,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        10,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        15
      ]
    },
    {
      "tb": 176,
      "tbk": 1,
      "tl": 139,
      "mb": 176,
      "mbk": 1,
      "gb": 176,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        10,
        81,
        15
      ]
    },
    {
      "tb": 171,
      "tbk": 2,
      "tl": 60,
      "mb": 114,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        10,
        48,
        82
      ]
    },
    {
      "tb": 80,
      "tbk": 2,
      "tl": 48,
      "mb": 64,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        10,
        29,
        50,
        51,
        17,
        15
      ]
    }
  ],
  "ftbl": [
    "[root]",
    "0x556b9be54a42: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:226:9)",
    "0x556b9be54a42: alloc::raw_vec::RawVec<T,A>::allocate_in (raw_vec.rs:204:45)",
    "0x556b9be54a42: alloc::raw_vec::RawVec<T,A>::with_capacity_in (raw_vec.rs:143:9)",
    "0x556b9be54a42: alloc::vec::Vec<T,A>::with_capacity_in (mod.rs:604:20)",
    "0x556b9be54a42: alloc::vec::Vec<T>::with_capacity (mod.rs:465:9)",
    "0x556b9be54a42: <&[u8] as std::ffi::c_str::CString::new::SpecIntoVec>::into_vec (c_str.rs:387:29)",
    "0x556b9be54a42: std::ffi::c_str::CString::new (c_str.rs:400:20)",
    "0x556b9be54a42: std::sys::unix::os::getenv (os.rs:530:13)",
    "0x556b9be34fed: main (???:0:0)",
    "0x556b9be2e6bb: <dhat::DhatAlloc as core::alloc::global::GlobalAlloc>::alloc (???:0:0)",
    "0x556b9be3a4e7: icu_plurals::rules::parser::Parser::get_relation (???:0:0)",
    "0x556b9be39fcf: icu_plurals::rules::parser::Parser::get_and_condition (???:0:0)",
    "0x556b9be3b477: icu_plurals::data::parse_rule (???:0:0)",
    "0x556b9be33254: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x556b9be36060: main (???:0:0)",
    "0x556b9be3a0ef: icu_plurals::rules::parser::Parser::get_and_condition (???:0:0)",
    "0x556b9be3367f: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x556b9be70bd4: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:226:9)",
    "0x556b9be70bd4: alloc::raw_vec::RawVec<T,A>::allocate_in (raw_vec.rs:204:45)",
    "0x556b9be70bd4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (raw_vec.rs:143:9)",
    "0x556b9be70bd4: alloc::vec::Vec<T,A>::with_capacity_in (mod.rs:604:20)",
    "0x556b9be70bd4: alloc::vec::Vec<T>::with_capacity (mod.rs:465:9)",
    "0x556b9be70bd4: <&[u8] as std::ffi::c_str::CString::new::SpecIntoVec>::into_vec (c_str.rs:387:29)",
    "0x556b9be70bd4: std::ffi::c_str::CString::new (c_str.rs:400:20)",
    "0x556b9be70bd4: std::sys::unix::fs::cstr (fs.rs:927:8)",
    "0x556b9be70bd4: std::sys::unix::fs::File::open (fs.rs:755:20)",
    "0x556b9be70bd4: std::fs::OpenOptions::_open (fs.rs:933:9)",
    "0x556b9be3518e: main (???:0:0)",
    "0x556b9be39e22: alloc::raw_vec::finish_grow (???:0:0)",
    "0x556b9be03c2d: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (???:0:0)",
    "0x556b9be326a3: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x556b9be3a026: icu_plurals::rules::parser::Parser::get_and_condition (???:0:0)",
    "0x556b9be33a7c: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x556b9be6f504: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:226:9)",
    "0x556b9be6f504: alloc::raw_vec::RawVec<T,A>::allocate_in (raw_vec.rs:204:45)",
    "0x556b9be6f504: alloc::raw_vec::RawVec<T,A>::with_capacity_in (raw_vec.rs:143:9)",
    "0x556b9be6f504: alloc::vec::Vec<T,A>::with_capacity_in (mod.rs:604:20)",
    "0x556b9be6f504: alloc::vec::Vec<T>::with_capacity (mod.rs:465:9)",
    "0x556b9be6f504: <&[u8] as std::ffi::c_str::CString::new::SpecIntoVec>::into_vec (c_str.rs:387:29)",
    "0x556b9be6f504: std::ffi::c_str::CString::new (c_str.rs:400:20)",
    "0x556b9be6f504: std::sys::unix::fs::cstr (fs.rs:927:8)",
    "0x556b9be6f504: std::sys::unix::fs::stat (fs.rs:1177:13)",
    "0x556b9be31eb2: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x556b9be352b0: main (???:0:0)",
    "0x556b9be31987: serde::de::impls::<impl serde::de::Deserialize for core::option::Option<T>>::deserialize (???:0:0)",
    "0x556b9be38981: core::ops::function::FnOnce::call_once (???:0:0)",
    "0x556b9be32bb6: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x556b9be3d55c: std::path::Path::join (???:0:0)",
    "0x556b9be350bc: main (???:0:0)",
    "0x556b9be00cb3: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (???:0:0)",
    "0x556b9be3b57c: icu_plurals::data::parse_rule (???:0:0)",
    "0x556b9be325f3: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x556b9be38ac1: core::ops::function::FnOnce::call_once (???:0:0)",
    "0x556b9be31b29: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x556b9be35023: main (???:0:0)",
    "0x556b9be322e6: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x556b9be3246d: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x556b9be3b745: alloc::raw_vec::finish_grow (???:0:0)",
    "0x556b9be0098c: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (???:0:0)",
    "0x556b9be3c0d8: <alloc::string::String as core::fmt::Write>::write_str.2816 (???:0:0)",
    "0x556b9be3be69: <icu_provider::resource::ResourceOptionsComponents as core::convert::From<&icu_provider::resource::ResourceOptions>>::from (???:0:0)",
    "0x556b9be320ab: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x556b9be350f3: main (???:0:0)",
    "0x556b9be38a31: core::ops::function::FnOnce::call_once (???:0:0)",
    "0x556b9be35082: main (???:0:0)",
    "0x556b9be06303: alloc::raw_vec::finish_grow (???:0:0)",
    "0x556b9be00a17: alloc::raw_vec::RawVec<T,A>::grow_amortized (raw_vec.rs:443:19)",
    "0x556b9be00a17: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (raw_vec.rs:334:28)",
    "0x556b9be0668a: alloc::raw_vec::RawVec<T,A>::reserve (raw_vec.rs:338:13)",
    "0x556b9be0668a: alloc::vec::Vec<T,A>::reserve (mod.rs:804:9)",
    "0x556b9be0668a: alloc::vec::Vec<T,A>::append_elements (mod.rs:1735:9)",
    "0x556b9be0668a: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (spec_extend.rs:85:18)",
    "0x556b9be0668a: alloc::vec::Vec<T,A>::extend_from_slice (mod.rs:2162:9)",
    "0x556b9be0668a: alloc::string::String::push_str (string.rs:841:9)",
    "0x556b9be0668a: <alloc::string::String as core::fmt::Write>::write_str (string.rs:2711:9)",
    "0x556b9be0668a: <&mut W as core::fmt::Write>::write_str (mod.rs:193:9)",
    "0x556b9be2024c: core::fmt::write (mod.rs:1126:17)",
    "0x556b9be065d7: core::fmt::Write::write_fmt (mod.rs:186:9)",
    "0x556b9be065d7: alloc::fmt::format (fmt.rs:583:5)",
    "0x556b9be31c43: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x556b9be328a1: icu_plurals::PluralRules::try_new (???:0:0)",
    "0x556b9be35154: main (???:0:0)"
  ]
}
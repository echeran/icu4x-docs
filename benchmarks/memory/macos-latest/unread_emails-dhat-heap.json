{
  "dhatFileVersion": 2,
  "mode": "rust-heap",
  "verb": "Allocated",
  "bklt": true,
  "bkacc": false,
  "tu": "Âµs",
  "Mtu": "s",
  "tuth": 10,
  "cmd": "target/release/examples/unread_emails",
  "pid": 2002,
  "tg": 404,
  "te": 433,
  "pps": [
    {
      "tb": 174,
      "tbk": 2,
      "tl": 118,
      "mb": 116,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        3
      ]
    },
    {
      "tb": 8,
      "tbk": 1,
      "tl": 0,
      "mb": 8,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ]
    },
    {
      "tb": 159,
      "tbk": 2,
      "tl": 121,
      "mb": 106,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        11
      ]
    },
    {
      "tb": 19,
      "tbk": 1,
      "tl": 19,
      "mb": 19,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        12,
        13,
        14
      ]
    },
    {
      "tb": 48,
      "tbk": 1,
      "tl": 9,
      "mb": 48,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        15
      ]
    },
    {
      "tb": 2496,
      "tbk": 5,
      "tl": 149,
      "mb": 1024,
      "mbk": 1,
      "gb": 576,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        16,
        17,
        18
      ]
    },
    {
      "tb": 86,
      "tbk": 1,
      "tl": 11,
      "mb": 86,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        12,
        19,
        20
      ]
    },
    {
      "tb": 58,
      "tbk": 1,
      "tl": 265,
      "mb": 58,
      "mbk": 1,
      "gb": 58,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        21
      ]
    },
    {
      "tb": 24,
      "tbk": 2,
      "tl": 3,
      "mb": 16,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        22,
        23,
        8,
        24,
        25
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 5,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        26,
        27,
        28,
        29
      ]
    },
    {
      "tb": 15,
      "tbk": 1,
      "tl": 25,
      "mb": 15,
      "mbk": 1,
      "gb": 15,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        30,
        31,
        32
      ]
    },
    {
      "tb": 336,
      "tbk": 3,
      "tl": 4,
      "mb": 192,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        33,
        28,
        29
      ]
    },
    {
      "tb": 73,
      "tbk": 1,
      "tl": 48,
      "mb": 73,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        12,
        34,
        35
      ]
    },
    {
      "tb": 174,
      "tbk": 2,
      "tl": 114,
      "mb": 116,
      "mbk": 1,
      "gb": 116,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        36
      ]
    },
    {
      "tb": 8192,
      "tbk": 1,
      "tl": 31,
      "mb": 8192,
      "mbk": 1,
      "gb": 8192,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        37
      ]
    },
    {
      "tb": 80,
      "tbk": 2,
      "tl": 2,
      "mb": 64,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        16,
        38,
        39,
        29
      ]
    },
    {
      "tb": 144,
      "tbk": 2,
      "tl": 3,
      "mb": 96,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        40
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 11,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        26,
        41,
        28,
        29
      ]
    },
    {
      "tb": 338,
      "tbk": 1,
      "tl": 50,
      "mb": 338,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        42
      ]
    },
    {
      "tb": 78,
      "tbk": 1,
      "tl": 23,
      "mb": 78,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        12,
        19,
        43
      ]
    },
    {
      "tb": 86,
      "tbk": 1,
      "tl": 26,
      "mb": 86,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        12,
        34,
        44
      ]
    },
    {
      "tb": 24,
      "tbk": 2,
      "tl": 9,
      "mb": 16,
      "mbk": 1,
      "gb": 16,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        45,
        46,
        47,
        48,
        32
      ]
    }
  ],
  "ftbl": [
    "[root]",
    "0x101daaa1b: backtrace::capture::Backtrace::new_unresolved (???:0:0)",
    "0x101e17012: ___rg_alloc (???:0:0)",
    "0x101e11b6d: _main (???:0:0)",
    "0x101e0f499: alloc::raw_vec::finish_grow (???:0:0)",
    "0x101dd9623: alloc::vec::Vec<T,A>::extend_from_slice (???:0:0)",
    "0x101dd8ddc: <&mut W as core::fmt::Write>::write_str (???:0:0)",
    "0x101dd8c5e: <&T as core::fmt::Display>::fmt (???:0:0)",
    "0x101dc544e: core::fmt::write (???:0:0)",
    "0x101dd87b6: <icu_provider::resource::ResourceOptionsComponents as core::convert::From<&icu_provider::resource::ResourceOptions>>::from (???:0:0)",
    "0x101e13b78: _main (???:0:0)",
    "0x101e11a9e: _main (???:0:0)",
    "0x101e0afd6: <&[u8] as std::ffi::c_str::CString::new::SpecIntoVec>::into_vec (???:0:0)",
    "0x101dec578: std::env::_var_os (???:0:0)",
    "0x101e11950: _main (???:0:0)",
    "0x101e11998: _main (???:0:0)",
    "0x101dea6d3: alloc::raw_vec::finish_grow (???:0:0)",
    "0x101ddc5e5: icu_provider_fs::manifest::_::<impl serde::de::Deserialize for icu_provider_fs::manifest::LocalesOption>::deserialize (???:0:0)",
    "0x101e12207: _main (???:0:0)",
    "0x101dd96b3: std::fs::metadata (???:0:0)",
    "0x101e13cf7: _main (???:0:0)",
    "0x101e11b2c: _main (???:0:0)",
    "0x101da42d4: alloc::raw_vec::finish_grow (???:0:0)",
    "0x101da475e: <&mut W as core::fmt::Write>::write_str (???:0:0)",
    "0x101da4686: alloc::fmt::format (???:0:0)",
    "0x101e13939: _main (???:0:0)",
    "0x101dd70d5: icu_plurals::rules::parser::Parser::get_relation (???:0:0)",
    "0x101dd6bcc: icu_plurals::rules::parser::Parser::get_and_condition (???:0:0)",
    "0x101dd75fc: icu_plurals::data::parse_rule (???:0:0)",
    "0x101e15300: _main (???:0:0)",
    "0x101e10ccb: serde::de::impls::<impl serde::de::Deserialize for core::option::Option<T>>::deserialize (???:0:0)",
    "0x101e1928f: icu_provider_fs::deserializer::deserialize_into_type (???:0:0)",
    "0x101e14043: _main (???:0:0)",
    "0x101dd6aeb: icu_plurals::rules::parser::Parser::get_and_condition (???:0:0)",
    "0x101e0b486: std::fs::OpenOptions::_open (???:0:0)",
    "0x101e11bf0: _main (???:0:0)",
    "0x101e136d7: _main (???:0:0)",
    "0x101e13fd4: _main (???:0:0)",
    "0x101dd629a: alloc::vec::Vec<T,A>::reserve (???:0:0)",
    "0x101dd76fd: icu_plurals::data::parse_rule (???:0:0)",
    "0x101e11a0b: _main (???:0:0)",
    "0x101dd6a83: icu_plurals::rules::parser::Parser::get_and_condition (???:0:0)",
    "0x101e11c9c: _main (???:0:0)",
    "0x101e13ab0: _main (???:0:0)",
    "0x101e13ef1: _main (???:0:0)",
    "0x101e113cb: alloc::raw_vec::finish_grow (???:0:0)",
    "0x101e1153a: alloc::vec::Vec<T,A>::reserve (???:0:0)",
    "0x101e103c2: <serde_json::read::IoRead<R> as serde_json::read::Read>::parse_str (???:0:0)",
    "0x101e1895c: icu_provider_fs::deserializer::deserialize_into_type (???:0:0)"
  ]
}
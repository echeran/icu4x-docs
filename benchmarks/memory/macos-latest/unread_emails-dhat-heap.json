{
  "dhatFileVersion": 2,
  "mode": "rust-heap",
  "verb": "Allocated",
  "bklt": true,
  "bkacc": false,
  "tu": "Âµs",
  "Mtu": "s",
  "tuth": 10,
  "cmd": "target/release/examples/unread_emails",
  "pid": 1984,
  "tg": 352,
  "te": 381,
  "pps": [
    {
      "tb": 159,
      "tbk": 2,
      "tl": 109,
      "mb": 106,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        3
      ]
    },
    {
      "tb": 78,
      "tbk": 1,
      "tl": 23,
      "mb": 78,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        4,
        5,
        6
      ]
    },
    {
      "tb": 86,
      "tbk": 1,
      "tl": 10,
      "mb": 86,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        4,
        5,
        7
      ]
    },
    {
      "tb": 174,
      "tbk": 2,
      "tl": 112,
      "mb": 116,
      "mbk": 1,
      "gb": 116,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        8
      ]
    },
    {
      "tb": 24,
      "tbk": 2,
      "tl": 3,
      "mb": 16,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        9,
        10,
        11,
        12,
        13
      ]
    },
    {
      "tb": 86,
      "tbk": 1,
      "tl": 26,
      "mb": 86,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        4,
        14,
        15
      ]
    },
    {
      "tb": 15,
      "tbk": 1,
      "tl": 24,
      "mb": 15,
      "mbk": 1,
      "gb": 15,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        16,
        17,
        18
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 5,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        19,
        20,
        21,
        22
      ]
    },
    {
      "tb": 8192,
      "tbk": 1,
      "tl": 26,
      "mb": 8192,
      "mbk": 1,
      "gb": 8192,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        23
      ]
    },
    {
      "tb": 80,
      "tbk": 2,
      "tl": 2,
      "mb": 64,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        24,
        25,
        26,
        22
      ]
    },
    {
      "tb": 73,
      "tbk": 1,
      "tl": 37,
      "mb": 73,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        4,
        14,
        27
      ]
    },
    {
      "tb": 174,
      "tbk": 2,
      "tl": 105,
      "mb": 116,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        28
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 11,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        19,
        29,
        21,
        22
      ]
    },
    {
      "tb": 338,
      "tbk": 1,
      "tl": 49,
      "mb": 338,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        30
      ]
    },
    {
      "tb": 24,
      "tbk": 2,
      "tl": 8,
      "mb": 16,
      "mbk": 1,
      "gb": 16,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        31,
        32,
        33,
        34,
        18
      ]
    },
    {
      "tb": 144,
      "tbk": 2,
      "tl": 3,
      "mb": 96,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        35
      ]
    },
    {
      "tb": 8,
      "tbk": 1,
      "tl": 0,
      "mb": 8,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        36,
        37,
        38,
        39,
        11,
        40,
        41
      ]
    },
    {
      "tb": 58,
      "tbk": 1,
      "tl": 249,
      "mb": 58,
      "mbk": 1,
      "gb": 58,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        42
      ]
    },
    {
      "tb": 19,
      "tbk": 1,
      "tl": 17,
      "mb": 19,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        4,
        43,
        44
      ]
    },
    {
      "tb": 2496,
      "tbk": 5,
      "tl": 146,
      "mb": 1024,
      "mbk": 1,
      "gb": 576,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        24,
        45,
        46
      ]
    },
    {
      "tb": 48,
      "tbk": 1,
      "tl": 9,
      "mb": 48,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        47
      ]
    },
    {
      "tb": 336,
      "tbk": 3,
      "tl": 4,
      "mb": 192,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        48,
        21,
        22
      ]
    }
  ],
  "ftbl": [
    "[root]",
    "0x10e4adcfb: backtrace::capture::Backtrace::new_unresolved (???:0:0)",
    "0x10e51a012: ___rg_alloc (???:0:0)",
    "0x10e514cae: _main (???:0:0)",
    "0x10e50e2b6: <&[u8] as std::ffi::c_str::CString::new::SpecIntoVec>::into_vec (???:0:0)",
    "0x10e4dc993: std::fs::metadata (???:0:0)",
    "0x10e516c46: _main (???:0:0)",
    "0x10e516e66: _main (???:0:0)",
    "0x10e516879: _main (???:0:0)",
    "0x10e4a75b4: alloc::raw_vec::finish_grow (???:0:0)",
    "0x10e4a7a3e: <&mut W as core::fmt::Write>::write_str (???:0:0)",
    "0x10e4c872e: core::fmt::write (???:0:0)",
    "0x10e4a7966: alloc::fmt::format (???:0:0)",
    "0x10e516acf: _main (???:0:0)",
    "0x10e50e766: std::fs::OpenOptions::_open (???:0:0)",
    "0x10e51704e: _main (???:0:0)",
    "0x10e513fab: serde::de::impls::<impl serde::de::Deserialize for core::option::Option<T>>::deserialize (???:0:0)",
    "0x10e51c28f: icu_provider_fs::deserializer::deserialize_into_type (???:0:0)",
    "0x10e51719e: _main (???:0:0)",
    "0x10e4da3b5: icu_plurals::rules::parser::Parser::get_relation (???:0:0)",
    "0x10e4d9eac: icu_plurals::rules::parser::Parser::get_and_condition (???:0:0)",
    "0x10e4da8dc: icu_plurals::data::parse_rule (???:0:0)",
    "0x10e518494: _main (???:0:0)",
    "0x10e51712b: _main (???:0:0)",
    "0x10e4ed9b3: alloc::raw_vec::finish_grow (???:0:0)",
    "0x10e4d957a: alloc::vec::Vec<T,A>::reserve (???:0:0)",
    "0x10e4da9dd: icu_plurals::data::parse_rule (???:0:0)",
    "0x10e514e00: _main (???:0:0)",
    "0x10e514d7d: _main (???:0:0)",
    "0x10e4d9d63: icu_plurals::rules::parser::Parser::get_and_condition (???:0:0)",
    "0x10e514eaf: _main (???:0:0)",
    "0x10e5145db: alloc::raw_vec::finish_grow (???:0:0)",
    "0x10e51474a: alloc::vec::Vec<T,A>::reserve (???:0:0)",
    "0x10e5136a2: <serde_json::read::IoRead<R> as serde_json::read::Read>::parse_str (???:0:0)",
    "0x10e51b95c: icu_provider_fs::deserializer::deserialize_into_type (???:0:0)",
    "0x10e514c1b: _main (???:0:0)",
    "0x10e512779: alloc::raw_vec::finish_grow (???:0:0)",
    "0x10e4dc7e3: alloc::vec::Vec<T,A>::extend_from_slice (???:0:0)",
    "0x10e4dbf9c: <&mut W as core::fmt::Write>::write_str (???:0:0)",
    "0x10e4dbe1e: <&T as core::fmt::Display>::fmt (???:0:0)",
    "0x10e4dba96: <icu_provider::resource::ResourceOptionsComponents as core::convert::From<&icu_provider::resource::ResourceOptions>>::from (???:0:0)",
    "0x10e516cea: _main (???:0:0)",
    "0x10e514d3c: _main (???:0:0)",
    "0x10e4ef858: std::env::_var_os (???:0:0)",
    "0x10e514b60: _main (???:0:0)",
    "0x10e4df8c5: icu_provider_fs::manifest::_::<impl serde::de::Deserialize for icu_provider_fs::manifest::LocalesOption>::deserialize (???:0:0)",
    "0x10e515417: _main (???:0:0)",
    "0x10e514ba8: _main (???:0:0)",
    "0x10e4d9dcb: icu_plurals::rules::parser::Parser::get_and_condition (???:0:0)"
  ]
}
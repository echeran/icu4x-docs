{
  "dhatFileVersion": 2,
  "mode": "rust-heap",
  "verb": "Allocated",
  "bklt": true,
  "bkacc": false,
  "tu": "Âµs",
  "Mtu": "s",
  "tuth": 10,
  "cmd": "target/release/examples/unread_emails",
  "pid": 2003,
  "tg": 362,
  "te": 390,
  "pps": [
    {
      "tb": 336,
      "tbk": 3,
      "tl": 4,
      "mb": 192,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        3,
        4,
        5
      ]
    },
    {
      "tb": 174,
      "tbk": 2,
      "tl": 109,
      "mb": 116,
      "mbk": 1,
      "gb": 116,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        6
      ]
    },
    {
      "tb": 78,
      "tbk": 1,
      "tl": 23,
      "mb": 78,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        7,
        8,
        9
      ]
    },
    {
      "tb": 86,
      "tbk": 1,
      "tl": 10,
      "mb": 86,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        7,
        8,
        10
      ]
    },
    {
      "tb": 159,
      "tbk": 2,
      "tl": 111,
      "mb": 106,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        11
      ]
    },
    {
      "tb": 24,
      "tbk": 2,
      "tl": 3,
      "mb": 16,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        12,
        13,
        14,
        15,
        16
      ]
    },
    {
      "tb": 80,
      "tbk": 2,
      "tl": 2,
      "mb": 64,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        17,
        18,
        19,
        5
      ]
    },
    {
      "tb": 86,
      "tbk": 1,
      "tl": 25,
      "mb": 86,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        7,
        20,
        21
      ]
    },
    {
      "tb": 338,
      "tbk": 1,
      "tl": 47,
      "mb": 338,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        22
      ]
    },
    {
      "tb": 2496,
      "tbk": 5,
      "tl": 143,
      "mb": 1024,
      "mbk": 1,
      "gb": 576,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        17,
        23,
        24
      ]
    },
    {
      "tb": 15,
      "tbk": 1,
      "tl": 23,
      "mb": 15,
      "mbk": 1,
      "gb": 15,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        25,
        26,
        27
      ]
    },
    {
      "tb": 174,
      "tbk": 2,
      "tl": 108,
      "mb": 116,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        28
      ]
    },
    {
      "tb": 8,
      "tbk": 1,
      "tl": 0,
      "mb": 8,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        29,
        30,
        31,
        32,
        14,
        33,
        34
      ]
    },
    {
      "tb": 144,
      "tbk": 2,
      "tl": 3,
      "mb": 96,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        35
      ]
    },
    {
      "tb": 8192,
      "tbk": 1,
      "tl": 28,
      "mb": 8192,
      "mbk": 1,
      "gb": 8192,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        36
      ]
    },
    {
      "tb": 19,
      "tbk": 1,
      "tl": 18,
      "mb": 19,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        7,
        37,
        38
      ]
    },
    {
      "tb": 24,
      "tbk": 2,
      "tl": 8,
      "mb": 16,
      "mbk": 1,
      "gb": 16,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        39,
        40,
        41,
        42,
        27
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 5,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        43,
        44,
        4,
        5
      ]
    },
    {
      "tb": 48,
      "tbk": 1,
      "tl": 8,
      "mb": 48,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        45
      ]
    },
    {
      "tb": 73,
      "tbk": 1,
      "tl": 42,
      "mb": 73,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        7,
        20,
        46
      ]
    },
    {
      "tb": 58,
      "tbk": 1,
      "tl": 250,
      "mb": 58,
      "mbk": 1,
      "gb": 58,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        47
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 11,
      "mb": 32,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        43,
        48,
        4,
        5
      ]
    }
  ],
  "ftbl": [
    "[root]",
    "0x1086f2a1b: backtrace::capture::Backtrace::new_unresolved (???:0:0)",
    "0x10875f012: ___rg_alloc (???:0:0)",
    "0x10871eaeb: icu_plurals::rules::parser::Parser::get_and_condition (???:0:0)",
    "0x10871f5fc: icu_plurals::data::parse_rule (???:0:0)",
    "0x10875d300: _main (???:0:0)",
    "0x10875b6d7: _main (???:0:0)",
    "0x108752fd6: <&[u8] as std::ffi::c_str::CString::new::SpecIntoVec>::into_vec (???:0:0)",
    "0x1087216b3: std::fs::metadata (???:0:0)",
    "0x10875bab0: _main (???:0:0)",
    "0x10875bcf7: _main (???:0:0)",
    "0x108759a9e: _main (???:0:0)",
    "0x1086ec2d4: alloc::raw_vec::finish_grow (???:0:0)",
    "0x1086ec75e: <&mut W as core::fmt::Write>::write_str (???:0:0)",
    "0x10870d44e: core::fmt::write (???:0:0)",
    "0x1086ec686: alloc::fmt::format (???:0:0)",
    "0x10875b939: _main (???:0:0)",
    "0x1087326d3: alloc::raw_vec::finish_grow (???:0:0)",
    "0x10871e29a: alloc::vec::Vec<T,A>::reserve (???:0:0)",
    "0x10871f6fd: icu_plurals::data::parse_rule (???:0:0)",
    "0x108753486: std::fs::OpenOptions::_open (???:0:0)",
    "0x10875bef1: _main (???:0:0)",
    "0x108759c9c: _main (???:0:0)",
    "0x1087245e5: icu_provider_fs::manifest::_::<impl serde::de::Deserialize for icu_provider_fs::manifest::LocalesOption>::deserialize (???:0:0)",
    "0x10875a207: _main (???:0:0)",
    "0x108758ccb: serde::de::impls::<impl serde::de::Deserialize for core::option::Option<T>>::deserialize (???:0:0)",
    "0x10876128f: icu_provider_fs::deserializer::deserialize_into_type (???:0:0)",
    "0x10875c043: _main (???:0:0)",
    "0x108759b6d: _main (???:0:0)",
    "0x108757499: alloc::raw_vec::finish_grow (???:0:0)",
    "0x108721623: alloc::vec::Vec<T,A>::extend_from_slice (???:0:0)",
    "0x108720ddc: <&mut W as core::fmt::Write>::write_str (???:0:0)",
    "0x108720c5e: <&T as core::fmt::Display>::fmt (???:0:0)",
    "0x1087207b6: <icu_provider::resource::ResourceOptionsComponents as core::convert::From<&icu_provider::resource::ResourceOptions>>::from (???:0:0)",
    "0x10875bb78: _main (???:0:0)",
    "0x108759a0b: _main (???:0:0)",
    "0x10875bfd4: _main (???:0:0)",
    "0x108734578: std::env::_var_os (???:0:0)",
    "0x108759950: _main (???:0:0)",
    "0x1087593cb: alloc::raw_vec::finish_grow (???:0:0)",
    "0x10875953a: alloc::vec::Vec<T,A>::reserve (???:0:0)",
    "0x1087583c2: <serde_json::read::IoRead<R> as serde_json::read::Read>::parse_str (???:0:0)",
    "0x10876095c: icu_provider_fs::deserializer::deserialize_into_type (???:0:0)",
    "0x10871f0d5: icu_plurals::rules::parser::Parser::get_relation (???:0:0)",
    "0x10871ebcc: icu_plurals::rules::parser::Parser::get_and_condition (???:0:0)",
    "0x108759998: _main (???:0:0)",
    "0x108759bf0: _main (???:0:0)",
    "0x108759b2c: _main (???:0:0)",
    "0x10871ea83: icu_plurals::rules::parser::Parser::get_and_condition (???:0:0)"
  ]
}
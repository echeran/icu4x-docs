{
  "dhatFileVersion": 2,
  "mode": "rust-heap",
  "verb": "Allocated",
  "bklt": true,
  "bkacc": false,
  "tu": "Âµs",
  "Mtu": "s",
  "tuth": 10,
  "cmd": "target/release/examples/unread_emails",
  "pid": 11805,
  "tg": 326,
  "te": 334,
  "pps": [
    {
      "tb": 8,
      "tbk": 1,
      "tl": 5,
      "mb": 8,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ]
    },
    {
      "tb": 15040,
      "tbk": 1,
      "tl": 245,
      "mb": 15040,
      "mbk": 1,
      "gb": 15040,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        9
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 12,
      "mb": 32,
      "mbk": 1,
      "gb": 32,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        10,
        11,
        12,
        13
      ]
    },
    {
      "tb": 22,
      "tbk": 1,
      "tl": 4,
      "mb": 22,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        14,
        8
      ]
    },
    {
      "tb": 15,
      "tbk": 1,
      "tl": 18,
      "mb": 15,
      "mbk": 1,
      "gb": 15,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        15,
        16
      ]
    },
    {
      "tb": 336,
      "tbk": 3,
      "tl": 5,
      "mb": 192,
      "mbk": 1,
      "gb": 192,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        17,
        12,
        13
      ]
    },
    {
      "tb": 8,
      "tbk": 1,
      "tl": 0,
      "mb": 8,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        3,
        4,
        5,
        6,
        18,
        8
      ]
    },
    {
      "tb": 32,
      "tbk": 1,
      "tl": 6,
      "mb": 32,
      "mbk": 1,
      "gb": 32,
      "gbk": 1,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        10,
        19,
        12,
        13
      ]
    },
    {
      "tb": 80,
      "tbk": 2,
      "tl": 2,
      "mb": 64,
      "mbk": 1,
      "gb": 0,
      "gbk": 0,
      "eb": 0,
      "ebk": 0,
      "fs": [
        1,
        2,
        20,
        21,
        22,
        13
      ]
    }
  ],
  "ftbl": [
    "[root]",
    "0x1017be72b: backtrace::capture::Backtrace::new_unresolved (???:0:0)",
    "0x1017b6b6c: ___rg_alloc (???:0:0)",
    "0x1017b82f8: alloc::raw_vec::finish_grow (???:0:0)",
    "0x10181f99f: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (???:0:0)",
    "0x1017e5dd7: <alloc::string::String as core::fmt::Write>::write_str.2900 (???:0:0)",
    "0x1017e5b96: <icu_provider::resource::ResourceOptionsComponents as core::convert::From<&icu_provider::resource::ResourceOptions>>::from (???:0:0)",
    "0x1017e67aa: icu_provider_blob::static_data_provider::StaticDataProvider::get_file (???:0:0)",
    "0x1017b49ea: _main (???:0:0)",
    "0x1017b42bd: _main (???:0:0)",
    "0x1017e4389: icu_plurals::rules::parser::Parser::get_relation (???:0:0)",
    "0x1017e3e33: icu_plurals::rules::parser::Parser::get_and_condition (???:0:0)",
    "0x1017e5231: icu_plurals::data::parse_rule (???:0:0)",
    "0x1017b5920: _main (???:0:0)",
    "0x1017e6866: icu_provider_blob::static_data_provider::StaticDataProvider::get_file (???:0:0)",
    "0x10181b42a: serde::de::impls::<impl serde::de::Deserialize for core::option::Option<T>>::deserialize (???:0:0)",
    "0x1017b4b71: _main (???:0:0)",
    "0x1017e3e91: icu_plurals::rules::parser::Parser::get_and_condition (???:0:0)",
    "0x1017e6c6c: icu_provider_blob::static_data_provider::StaticDataProvider::get_file (???:0:0)",
    "0x1017e3f6f: icu_plurals::rules::parser::Parser::get_and_condition (???:0:0)",
    "0x1017b8ab7: alloc::raw_vec::finish_grow (???:0:0)",
    "0x10181b9b4: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (???:0:0)",
    "0x1017e533a: icu_plurals::data::parse_rule (???:0:0)"
  ]
}